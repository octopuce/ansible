server {

		listen 80;
		listen [::]:80;
		server_name {{ host.name }}.{{ domain.name }};

		access_log /var/log/nginx/{{ host.name }}.{{ domain.name }}_access.log;
		error_log /var/log/nginx/{{ host.name }}.{{ domain.name }}_error.log;

		location / {
				return 301 https://$host$request_uri;
		}

		location /.well-known/acme-challenge {
				root /var/www/letsencrypt;
		}
        root /var/www/{{ host.name }};

}


server {

		listen 443 ssl http2;
		listen [::]:443 ssl http2;
		server_name {{ host.name }}.{{ domain.name }};
        root /var/www/{{ host.name }};

        index index.html;

		access_log /var/log/nginx/{{ host.name }}.{{ domain.name }}_access.log;
		error_log /var/log/nginx/{{ host.name }}.{{ domain.name }}_error.log;

		{% if host.generate_certs %}

		#ssl_certificate /etc/letsencrypt/live/{{ host.name }}.{{ domain.name }}/fullchain.pem;
		#ssl_certificate_key /etc/letsencrypt/live/{{ host.name }}.{{ domain.name }}/privkey.pem;

		{% else %}

		ssl_certificate /etc/letsencrypt/live/{{ host.name }}.{{ domain.name }}/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/{{ host.name }}.{{ domain.name }}/privkey.pem;

		{% endif %}

		client_max_body_size 50m;

        {% if host.proxy is defined %}
		location / {

				{% if host.whitelist is defined %}
				satisfy any;
				#for i in whitelist : do thingy
				allow 127.0.0.0/8;
				allow ::1;
				{% for cidr in host.whitelist %}
				allow {{ cidr }};
				{% endfor %}

				deny all;  
				{% endif %}

				proxy_set_header Host $host;
				proxy_set_header X-Real-IP $remote_addr;
				proxy_set_header X-Forwarded-Proto https;
				proxy_pass {{ host.proxy }};

				proxy_buffers 4 256k;
				proxy_busy_buffers_size    256k;
				proxy_buffer_size          128k;
		}
        {% endif %}

}

