---
- hosts: all
  sudo: yes
  remote_user: root

  vars:
    main_nodes_ips: "{% set IP_ARR=[] %}{% for host in groups['all'] %}{% if IP_ARR.insert(loop.index,hostvars[host]['ansible_default_ipv4']['address']) %}{% endif %}{% endfor %}{{IP_ARR|join(' ')}}"
    main_nodes_ipc: "{% set IP_ARR=[] %}{% for host in groups['all'] %}{% if IP_ARR.insert(loop.index,hostvars[host]['ansible_default_ipv4']['address']) %}{% endif %}{% endfor %}{{IP_ARR|join(',')}}"
    main_nodes_iparr: "{% set IP_ARR=[] %}{% for host in groups['all'] %}{% if IP_ARR.insert(loop.index,hostvars[host]['ansible_default_ipv4']['address']) %}{% endif %}{% endfor %}{{IP_ARR|join('\",\"')}}"
    ipv4_master_addr: "{{ hostvars[groups['all'][0]]['ansible_default_ipv4']['address'] }}"

  vars_files:
    - "{{ var_file }}"

  tasks:

  - name: update puppet 
    command: "prun safe"

  - name: ensure packages installed
    apt: pkg=elasticsearch  state=latest force=yes

  - name: ensure service is set to start automatically
    command: "chkconfig elasticsearch on"

  - name: Create infra dirs
    command: mkdir -p {{ item }} 
    with_items:
        - /infra/etc/{{ cluster_name }}/elasticsearch
        - /infra/etc/{{ cluster_name }}/network/iptables-specific.d
        - /etc/network/iptables-specific.d

  - name: Deploy iptables-specific
    copy:
        src: files/iptables-specific
        dest: /infra/etc/{{ cluster_name }}/network/iptables-specific
        owner: root 
        group: root
        mode: 0700

  - name: remove existing iptables files
    file: path={{ item.dest }} state=absent
    with_items:
        - { src: '/infra/etc/{{ cluster_name }}/network/iptables-specific', dest: '/etc/network/iptables-specific' }
        - { src: '/infra/etc/{{ cluster_name }}/network/iptables-specific.d/elasticsearch.conf', dest: '/etc/network/iptables-specific.d/elasticsearch.conf' }

  - name: symlink iptables-specific files
    command: ln -s {{ item.src }} {{ item.dest }} 
    with_items:
        - { src: '/infra/etc/{{ cluster_name }}/network/iptables-specific', dest: '/etc/network/iptables-specific' }
        - { src: '/infra/etc/{{ cluster_name }}/network/iptables-specific.d/elasticsearch.conf', dest: '/etc/network/iptables-specific.d/elasticsearch.conf' }

  - name: Create Firewall file
    template:
        src: templates/iptables.elasticsearch.conf
        dest: /infra/etc/{{cluster_name}}/network/iptables-specific.d/elasticsearch.conf
        owner: root
        group: root 
        mode: 0700

  - name: Reload Firewall
    command: /etc/network/iptables_on.sh

  - name: create elasticsearch.yml
    template:
        force: yes 
        src: templates/elasticsearch.yml
        dest: /infra/etc/{{ cluster_name }}/elasticsearch/elasticsearch.yml.{{ansible_hostname}}
        owner: elasticsearch
        group: elasticsearch
        mode: 0644

  - name : Remove node conf in /etc
    command : rm -f /etc/elasticsearch/{{item}} 
    with_items:
      - elasticsearch.yml

  - name : move node conf to infra 
    command :  ln -s /infra/etc/{{ cluster_name }}/elasticsearch/{{item}}.{{ansible_hostname}} /etc/elasticsearch/{{item}} 
    with_items:
      - elasticsearch.yml 

  - name: restart services
    command: service {{ item }} restart
    with_items:
        - elasticsearch
